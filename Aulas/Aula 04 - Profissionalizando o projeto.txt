funcion add:

chamamos uma biblioteca responsável por gerar uma nova data em inglês (new date), depois chama uma função para deixar em data numérica e depois transformamos na data br com (toLocaleDateString('pt-br')), logo em seguida, realizamos a diminuição de caracteres com o objeto (.slice(0,-5))

new date().toLocaleDateString('pt-br').slice(0,-5)

o resultado será: 

'13/01'

funcion save:

localStoge: objeto que guarda na memória do browser informações no local
localStore.setItem: serve para guardar esse valor, porém, ele precisa de uma chave e um valor/objeto transformado para texto: 

JSON é uma biblioteca que chama uma função "stringify" e transforma os dados em string.
	- localStorage.setItem('NLWSetup@habits', JSON.stringify(nlw.Setup.data)
	
Ele salvou, porém, é preciso chama-lo com o seguinte comando: 
 
	- localStorage.getItem('NLWSetup@habits')

Foi carregado, mas em forma de texto, logo, é preciso recarrega-lo novamente em objeto novamente com o seguinte comando: 

	- JSON.parse(localStorage.getItem('NLWSetup@habits'))
	
O JSON.parse (função) é responsável por pegar um texto e transformado em objeto novamente. 

Obs: ao trocar para ambiente virtual(hospedagem), é preciso alterar essas informações, pois apresenta um erro: 

NLWSetup.js:187 Uncaught Object data is needed { habitName: [...days: string]

pois JSON.parse(localStorage.getItem('NLWSetup@habits')) não existe mais. 


