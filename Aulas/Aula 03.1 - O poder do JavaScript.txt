## Instru√ß√µes e sintaxe

Toda linguagem √© escrita com esses 2 princ√≠pios

- **Instru√ß√µes** (declara√ß√µes)
    
    Ordens ao computador
    
- **Sintaxe**
    
    Maneira correta de escrever
    

```jsx
const mensagem = "Bom te ver aqui! "

alert(mensagem + (10 * 100) + " abra√ßos")

// Bom te ver aqui! 1000 abra√ßos
```

<aside>
üí° Existem `palavras reservadas` da linguagem. 
Elas s√£o respons√°veis em dar significado a diversas instru√ß√µes.

</aside>

# Vari√°veis e Tipos de dados

Facilitando as informa√ß√µes

---

## Vari√°veis

Uma caixinha onde guardamos um tipo de dado para usar mais tarde.

---

## Tipos de dados

Informa√ß√µes que podem ser em `textos`, `n√∫meros`, `booleanos` (valores l√≥gicos: verdadeiro ou falso) ou dados mais `estruturados`

// declaro e atribuo valor
let boasVindas = 'Fala, Dev!';

// reatribuo valor
boasVindas = `Fala, Dev! Tudo beleza?!`;

// constante n√£o pode mudar o valor
const serHumano = true;
serHumano = false // Erro!


# Fun√ß√µes

- Agrupamento de c√≥digo
- Reuso de c√≥digo
- Mini programas dentro do programa maior
- Toda linguagem oferece muitas op√ß√µes

// usando uma fun√ß√£o
alert('Fala, Dev!')

// criando uma fun√ß√£o
function alert(text) {
	return text
}

# Objetos

## Tudo √© objeto

- Atributos
    
    S√£o as propriedades de um objeto
    
- M√©todos
    
    S√£o as funcionalidades de um objeto
    
    
    
// criando um objeto
const celular = {
	cor: 'preto',
	ligar: function() {}
}

// usando um objeto
celular.cor // preto
celular.ligar() // executa fun√ß√£o

## Document Object Model - DOM

√â a modelagem dos nossos elementos HTML em Objeto JavaScript

## Document

Posso controlar minha p√°gina, meu documento HTML, pelo JavaScript, atrav√©s do objeto `document`

```jsx
document // objeto que existe em todo navegador
.querySelector('a') // seleciona a tag a
.click() // d√° a ordem de clicar na tag a
```
